{"ast":null,"code":"var _jsxFileName = \"/Users/kobaruaya/next_react/components/AddressShow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    if (this.props.login == false) {\n      Router.push('/address');\n    }\n\n    this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login,logout処理\n\n\n  logined() {\n    console.log('logined');\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // アドレスデータの検索\n\n\n  getAddress(email) {\n    let db = firebase.database();\n    let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n    ref0.set(false);\n    let ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n    let self = this;\n    ref.orderByKey().equalTo(Lib.encodeEmail(email)).on('value', snapshot => {\n      for (let i in snapshot.val()) {\n        let d = Lib.deepcopy(snapshot.val()[i]);\n        self.setState({\n          address: d\n        });\n        break;\n      }\n    });\n  } // フィールド入力\n\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  } // メッセージ送信処理\n\n\n  doAction() {\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.database();\n    let d = new Date().getTime();\n    let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n    ref.set('to: ' + this.state.input);\n    let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n    ref2.set('from: ' + this.state.input);\n    let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n    ref3.set(true);\n    this.setState({\n      input: ''\n    });\n  } // レンダリング\n\n\n  render() {\n    if (this.state.address == null) {\n      this.getAddress(Router.query.email);\n    }\n\n    let items = [];\n\n    if (this.state.address != null) {\n      for (let n in this.state.address.messages) {\n        items.unshift(__jsx(\"li\", {\n          key: n,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }\n        }, this.state.address.messages[n]));\n      }\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, this.state.message), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), this.state.address != null ? __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"NAME\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, this.state.address.name)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"MAIL\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, this.state.email)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"TEL\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, this.state.address.tel)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"MEMO\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, this.state.address.memo)))) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"no-address\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }), __jsx(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Message:\"), __jsx(\"input\", {\n      type: \"text\",\n      size: \"40\",\n      value: this.state.input,\n      onChange: this.doChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), __jsx(\"button\", {\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"send\")), this.state.address != null && this.state.address.messages != null ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, items)) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"));\n  }\n\n}\n\nAddressShow = connect(state => state)(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["/Users/kobaruaya/next_react/components/AddressShow.js"],"names":["React","Component","connect","firebase","Lib","Account","Router","AddressShow","constructor","props","fontSize","padding","login","push","state","last","input","email","query","address","message","logined","bind","doChange","doAction","console","log","logouted","getAddress","db","database","ref0","ref","encodeEmail","set","self","orderByKey","equalTo","on","snapshot","i","val","d","deepcopy","setState","e","target","value","from","to","Date","getTime","ref2","ref3","render","items","n","messages","unshift","name","tel","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\n\nimport Router from 'next/router';\n\n\nclass AddressShow extends Component {\n  style = {\n    fontSize:\"12pt\",\n    padding:\"5px 10px\"\n  }\n\n\n  constructor(props) {\n    super(props);\n    if (this.props.login == false){\n      Router.push('/address');\n    }\n    this.state = {\n      last:-1,\n      input:'',\n      email:Router.query.email,\n      address:null,\n      message:Router.query.email + 'のデータ'\n    }\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n\n  // login,logout処理\n  logined(){\n    console.log('logined');\n  }\n  logouted(){\n    Router.push('/address');\n  }\n\n\n  // アドレスデータの検索\n  getAddress(email){\n    let db = firebase.database();\n    let ref0 = db.ref('address/'\n      + Lib.encodeEmail(this.props.email)\n      + '/' + Lib.encodeEmail(email) + '/check');\n    ref0.set(false);\n    let ref = db.ref('address/'\n      + Lib.encodeEmail(this.props.email));\n    let self = this;\n    ref.orderByKey()\n      .equalTo(Lib.encodeEmail(email))\n      .on('value', (snapshot)=>{\n        for(let i in snapshot.val()){\n          let d = Lib.deepcopy(snapshot.val()[i]);\n          self.setState({\n            address:d\n          });\n          break;\n        }\n      });\n  }\n\n\n  // フィールド入力\n  doChange(e){\n    this.setState({\n      input:e.target.value\n    });\n  }\n\n\n  // メッセージ送信処理\n  doAction(){\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.database();\n    let d = new Date().getTime();\n    let ref = db.ref('address/' + from + '/' + to\n      + '/messages/' + d);\n    ref.set('to: ' + this.state.input);\n    let ref2 = db.ref('address/' + to + '/' + from\n      + '/messages/' + d);\n    ref2.set('from: ' + this.state.input);\n    let ref3 = db.ref('address/' + to + '/' + from\n      + '/check/');\n    ref3.set(true);\n    this.setState({ input:''})\n  }\n\n\n  // レンダリング\n  render(){\n    if (this.state.address == null){\n      this.getAddress(Router.query.email);\n    }\n    let items = [];\n    if (this.state.address != null){\n      for(let n in this.state.address.messages){\n        items.unshift(<li key={n}>\n          {this.state.address.messages[n]}\n        </li>);\n      }\n    }\n    return (\n      <div>\n        <Account onLogined={this.logined}\n          onLogouted={this.logouted} />\n        <p>{this.state.message}</p>\n        <hr/>\n        {this.state.address != null\n        ?\n        <table>\n          <tbody>\n            <tr>\n              <th>NAME</th>\n              <td>{this.state.address.name}</td>\n            </tr>\n            <tr>\n              <th>MAIL</th>\n              <td>{this.state.email}</td>\n            </tr>\n            <tr>\n              <th>TEL</th>\n              <td>{this.state.address.tel}</td>\n            </tr>\n            <tr>\n              <th>MEMO</th>\n              <td>{this.state.address.memo}</td>\n            </tr>\n          </tbody>\n        </table>\n        :\n        <p>no-address</p>\n        }\n        <hr />\n        <fieldset>\n          <p>Message:</p>\n          <input type=\"text\" size=\"40\"\n            value={this.state.input}\n            onChange={this.doChange} />\n          <button onClick={this.doAction}>send</button>\n        </fieldset>\n        {this.state.address != null &&\n          this.state.address.messages != null\n        ?\n        <div>\n        <p>※{this.state.address.name}さんとのメッセージ</p>\n        <ul>{items}</ul>\n        </div>\n        :\n        <p>※メッセージはありません。</p>\n        }\n      </div>\n    );\n  }\n\n\n}\nAddressShow = connect((state)=> state)(AddressShow);\nexport default AddressShow;\n\n"]},"metadata":{},"sourceType":"module"}