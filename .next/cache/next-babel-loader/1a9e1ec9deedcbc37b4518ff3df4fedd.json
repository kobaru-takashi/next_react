{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\"; // Firebase設定\n\nvar config = {\n  apiKey: \"AIzaSyDCDDcQeh7kBvRgIQarq1ydYUfL641vmjQ\",\n  authDomain: \"react-1445.firebaseapp.com\",\n  databaseURL: \"https://react-1445.firebaseio.com\",\n  projectId: \"react-1445\",\n  storageBucket: \"react-1445.appspot.com\",\n  messagingSenderId: \"57007429233\"\n}; // Firebase初期化\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; // ステート初期値\n\nvar initial = {\n  login: false,\n  username: '(click here!)',\n  email: '',\n  data: [],\n  items: []\n}; // レデューサー\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intitial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // ダミー\n    case 'UPDATE_USER':\n      return action.value;\n    // デフォルト\n\n    default:\n      return state;\n  }\n} // initStore関数\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/kobaruaya/next_react/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireapp","initializeApp","error","console","log","message","initial","login","username","email","data","items","fireReducer","state","intitial","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAGA;;AACA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,4BAFD;AAGXC,EAAAA,WAAW,EAAE,mCAHF;AAIXC,EAAAA,SAAS,EAAE,YAJA;AAKXC,EAAAA,aAAa,EAAE,wBALJ;AAMXC,EAAAA,iBAAiB,EAAE;AANR,CAAb,C,CAUA;;AACA,IAAIC,OAAJ;;AACA,IAAI;AACFA,EAAAA,OAAO,GAAGR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB,CAAV;AACD,CAFD,CAEE,OAAOS,KAAP,EAAc;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;;AACD,eAAeL,OAAf,C,CAGA;;AACA,IAAMM,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAC,KADQ;AAEdC,EAAAA,QAAQ,EAAC,eAFK;AAGdC,EAAAA,KAAK,EAAC,EAHQ;AAIdC,EAAAA,IAAI,EAAC,EAJS;AAKdC,EAAAA,KAAK,EAAC;AALQ,CAAhB,C,CASA;;AACA,SAASC,WAAT,GAA+C;AAAA,MAA1BC,KAA0B,uEAAlBC,QAAkB;AAAA,MAARC,MAAQ;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,KAAd;AACF;;AACA;AACE,aAAOJ,KAAP;AANJ;AAQD,C,CAGD;;;AACA,OAAO,SAASK,SAAT,GAAoC;AAAA,MAAjBL,KAAiB,uEAATP,OAAS;AACzC,SAAOjB,WAAW,CAACuB,WAAD,EAAcC,KAAd,EAChBvB,eAAe,CAACC,eAAD,CADC,CAAlB;AAED","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport firebase from \"firebase\";\n\n\n// Firebase設定\nvar config = {\n  apiKey: \"AIzaSyDCDDcQeh7kBvRgIQarq1ydYUfL641vmjQ\",\n  authDomain: \"react-1445.firebaseapp.com\",\n  databaseURL: \"https://react-1445.firebaseio.com\",\n  projectId: \"react-1445\",\n  storageBucket: \"react-1445.appspot.com\",\n  messagingSenderId: \"57007429233\",\n};\n\n\n// Firebase初期化\nvar fireapp;\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\nexport default fireapp;\n\n\n// ステート初期値\nconst initial = {\n  login:false,\n  username:'(click here!)',\n  email:'',\n  data:[],\n  items:[]\n}\n\n\n// レデューサー\nfunction fireReducer(state = intitial, action) {\n  switch (action.type) {\n    // ダミー\n    case 'UPDATE_USER':\n      return action.value;\n    // デフォルト\n    default:\n      return state;\n  }\n}\n\n\n// initStore関数\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state,\n    applyMiddleware(thunkMiddleware))\n}\n\n"]},"metadata":{},"sourceType":"module"}